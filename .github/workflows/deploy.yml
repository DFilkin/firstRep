name: Build and Deploy Java App with Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: Build Docker Image
        run: |
          docker build -t testing-app .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Docker Container to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            #!/bin/bash
            APP_DIR=~/app
            cd $APP_DIR
            
            # Убедимся, что образ был построен
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker build -t testing-app .
            
            # Убедимся, что контейнер не существует перед его запуском
            if sudo docker ps -a | grep -q "testing-container"; then
              echo "Container exists, stopping it..."
              echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker stop testing-container
              echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker rm testing-container
            fi
            
            # Запускаем новый контейнер
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker run -d -p 8080:8080 --name testing-container testing-app
            echo "App started!"
            
            # Даем некоторое время на выполнение
            sleep 60
            
            # Останавливаем контейнер
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker stop testing-container
            echo "App stopped!"